version: '3.4'

services:

# Part of the application

  # Ocelot API Gateway
  ocelot-api-gateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile

  # Catalog API
  catalog-api-webapi:
    image: ${DOCKER_REGISTRY-}catalogapiwebapi
    build:
      context: .
      dockerfile: Services/Catalog.API/Catalog.API.WebApi/Dockerfile

  # Discount API
  discount-api-webapi:
    image: ${DOCKER_REGISTRY-}discountapiwebapi
    build:
      context: .
      dockerfile: Services/Discount.API/Discount.API.WebApi/Dockerfile

  # Identity Server
  identity-server:
    image: ${DOCKER_REGISTRY-}identityserver
    build:
      context: .
      dockerfile: IdentityServer/IdentityServer/Dockerfile
      
  # Health Check Web Page
  web-status:
    image: ${DOCKER_REGISTRY-}webstatus
    build:
      context: .
      dockerfile: WebApps/WebStatus/Dockerfile

#Part of infrastructure, remove when not needed
  
  # Portainer to view docker images
  portainer:
    image: portainer/portainer-ce

  # Mongo GUI
  mongo-express:
    image: mongo-express

  # Postgres Admin GUI
  pgadmin:
    image: dpage/pgadmin4

  # Redis database
  catalog-api-redis:
    image: redis:alpine

  # Mongo Database for Catalog API
  catalog-api-mongodb:
    image: mongo

  # PostgreSQL database for Discount API
  discount-api-postgresdb:
    image: postgres:alpine

  # SQL server for Identity Server
  identity-server-sqldb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  # Elasticsearch to collect logs
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2

  # Kibana to display logs
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2

 # Consul for service discovery
  consul:
    image: consul

volumes:
  mongo_data:
  portainer_data:
  elasticsearch-data:
  postgres_data:
  pgadmin_data:
